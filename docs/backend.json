{
  "entities": {
    "User": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "User",
      "type": "object",
      "description": "Represents a user of the SpendWise application.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the user."
        },
        "email": {
          "type": "string",
          "description": "User's email address.",
          "format": "email"
        }
      },
      "required": [
        "id",
        "email"
      ]
    },
    "Expense": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Expense",
      "type": "object",
      "description": "Represents an expense record.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the expense."
        },
        "userId": {
          "type": "string",
          "description": "Reference to User. (Relationship: User 1:N Expense)"
        },
        "categoryId": {
          "type": "string",
          "description": "Reference to Category. (Relationship: Category 1:N Expense)"
        },
        "amount": {
          "type": "number",
          "description": "The amount of the expense."
        },
        "date": {
          "type": "string",
          "description": "The date of the expense.",
          "format": "date-time"
        },
        "description": {
          "type": "string",
          "description": "Description of the expense."
        }
      },
      "required": [
        "id",
        "userId",
        "categoryId",
        "amount",
        "date"
      ]
    },
    "Category": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Category",
      "type": "object",
      "description": "Represents a category of expenses.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the category."
        },
        "userId": {
          "type": "string",
          "description": "Reference to User. (Relationship: User 1:N Category)"
        },
        "name": {
          "type": "string",
          "description": "Name of the category."
        },
        "budget": {
          "type": "number",
          "description": "Monthly budget for the category."
        }
      },
      "required": [
        "id",
        "userId",
        "name",
        "budget"
      ]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/users/{userId}",
        "definition": {
          "entityName": "User",
          "schema": {
            "$ref": "#/backend/entities/User"
          },
          "description": "Stores user profiles. All data is private to the user identified by `userId`.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/categories/{categoryId}",
        "definition": {
          "entityName": "Category",
          "schema": {
            "$ref": "#/backend/entities/Category"
          },
          "description": "Stores expense categories created by each user. Path-based ownership ensures that only the user can access their categories.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user."
            },
            {
              "name": "categoryId",
              "description": "The unique identifier for the category."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/expenses/{expenseId}",
        "definition": {
          "entityName": "Expense",
          "schema": {
            "$ref": "#/backend/entities/Expense"
          },
          "description": "Stores individual expense entries for each user. `userId` on the expense document is redundant but included to strictly define ownership within security rules without querying other documents. The user can only access their own expenses.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user."
            },
            {
              "name": "expenseId",
              "description": "The unique identifier for the expense."
            }
          ]
        }
      }
    ],
    "reasoning": "The Firestore structure is designed to store user information, expense records, and expense categories for the SpendWise application. It prioritizes authorization independence by using path-based ownership for user-specific data, eliminating the need for `get()` calls in security rules. \n\nSpecifically:\n\n*   `/users/{userId}`: Stores user profiles. All data is private to the user identified by `userId`.  This ensures sole ownership.\n*   `/users/{userId}/categories/{categoryId}`: Stores expense categories created by each user. This parent-child relationship utilizes a hierarchical path and is secured via path-based rules.\n*   `/users/{userId}/expenses/{expenseId}`: Stores individual expense entries for each user.  This maintains path-based ownership, crucial for security and scalability.  The `userId` on the expense document is redundant but included to strictly define ownership within security rules without querying other documents.\n\nThis design avoids complex authorization logic in the rules, simplifying security and improving performance."
  }
}